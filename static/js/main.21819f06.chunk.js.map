{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","setPhotos","albumId","setAlbumId","isLoading","setIsLoading","className","style","paddingBottom","type","placeholder","onChange","e","target","value","onClick","id","fetch","then","response","json","length","map","title","thumbnailUrl","width","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAsDeA,MAlDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,wBAAwBC,MAAO,CAAEC,cAAe,OAA/D,UACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBJ,UAAU,UAAUK,SAAU,SAACC,GAAD,OAAOT,EAAWS,EAAEC,OAAOC,UAC1G,wBAAQR,UAAU,MAAMS,QATR,WAVN,IAACC,IAWPd,EAVVG,GAAa,GACbY,MAAM,GAAD,OAVG,uCAUH,mBAAkBD,EAAlB,YACFE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAClB,GACLC,EAAUD,GACVK,GAAa,OAaX,SACGD,EAAY,aAAc,8BAG/B,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,kDAAf,SACGN,EAAOqB,OAASrB,EAAOsB,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACrC,OACE,mCACI,sBAAKlB,UAAU,WAAWC,MAAO,CAAEkB,MAAO,SAA1C,UACE,8BACE,qBAAKnB,UAAU,QAAQoB,IAAKF,EAAcG,IAAKJ,MAEjD,8BAAMA,YAIX,6BClCAK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.21819f06.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nconst api = 'https://jsonplaceholder.typicode.com'\n\nfunction App() {\n\n  const [photos, setPhotos] = useState([])\n  const [albumId, setAlbumId] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const getPhotos = (id) => {\n    setIsLoading(true)\n    fetch(`${api}/albums/${id}/photos`)\n      .then((response) => response.json())\n      .then((photos) => {\n        setPhotos(photos);\n        setIsLoading(false);\n      });\n  }\n\n  const handleGetPhotos = () => {\n    getPhotos(albumId);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"d-flex-md flex-center\" style={{ paddingBottom: \"4px\" }}>\n          <input type=\"number\" placeholder=\"Type album ID\" className=\"textbox\" onChange={(e) => setAlbumId(e.target.value)}/>\n          <button className=\"btn\" onClick={handleGetPhotos}>\n            {isLoading ? \"Loading...\":(\"Get Album Photos By Id\")}\n          </button>\n        </div>\n        <div className=\"gallery\">\n          <div className=\"d-flex-md flex-horizontal flex-wrap flex-center\">\n            {photos.length ? photos.map(({title, thumbnailUrl}) => {\n            return (\n              <>\n                  <div className=\"card m-2\" style={{ width: \"18rem\"}}>\n                    <div>\n                      <img className=\"image\" src={thumbnailUrl} alt={title}/>\n                    </div>\n                    <div>{title}</div>\n                  </div>\n              </>\n            )\n          }) : \"No images found.\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}